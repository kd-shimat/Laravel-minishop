# docker/webもしくはdocker/app以下の更新があったときに、
# それぞれのDockerfileを使ってビルドし直す
# 各イメージについては、以下のベース名を持つ
# docker/web -> ghcr.io/densuke/laravelapp-web
# docker/app -> ghcr.io/densuke/laravelapp-web
# それぞれタグとして、ビルド時のepoch秒を設定する、これは人によりイメージが異なることを防ぐためである

name: image CI
on:
    # ディレクトリdocker/webとdocker/appに変更があったときに実行
    push:
        paths:
            - 'docker/web/**'
            - 'docker/app/**'
            - '.github/workflows/ghcr.yml'
    # 手動で実行する場合
    workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  epoch: 0

jobs:
    build:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      strategy:
        matrix:
          service: [web, app]

      steps:
      - name: pushするかの確認
        run: |
          if [ -z "${ACT}" ]; then
            echo "do_push=true" >> $GITHUB_ENV
          else
            echo "do_push=false" >> $GITHUB_ENV
          fi
      - name: タイムスタンプの取得
        run: echo "epoch=$(date +%s)" >> $GITHUB_ENV
      - name: ソース取得
        uses: actions/checkout@v4
      - name: コンテナレジストリへのログイン        # actではログインはしなくていいです
        if: ${{ !env.ACT  }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: メタデータの取得(Docker)
        if: ${{ !env.ACT }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.epoch }}
      - name: Docker Buildxのセットアップ
        uses: docker/setup-buildx-action@v3
      - name: Dockerイメージのビルド
        uses: docker/build-push-action@v4
        with:
          context: docker/${{ matrix.service }}
          #push: true
          # actの時はpushはしない(false)
          push: ${{ env.do_push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
